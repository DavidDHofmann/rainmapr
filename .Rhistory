# Load required packages
library(raster)
library(rainmapr)
devtools::install_github("DavidDHofmann/rainmapr")
library(rainmapr)
# Download chirps data
chirps_files <- getCHIRPS(
tres      = "monthly"
, sres      = 0.05
, dates     = c("2020-06-01", "2020-12-01")
, dsn       = tempdir()
, overwrite = T
)
# Load data into the r session
r <- stack(chirps_files)
# Reclassify values for easier plotting
r <- reclassify(r, c(-Inf, 0, NA))
# Visualize
plot(r)
# Visualize
plot(r, nrow = 2)
# Visualize
plot(r, asp = 2)
# Visualize
plot(r, asp = 2)
# Visualize
plot(r, asp = 0.2)
# Visualize
plot(r)
# Visualize
plot(r[[1]])
par(mfrow = c(2, 1))
plot(r[[1]])
plot(r[[2]])
# Load required packages
library(terra)
# Load data into the r session
r <- rast(chirps_files)
# Reclassify values for easier plotting
r <- classify(r, c(-Inf, 0, NA))
# Visualize
plot(r)
# Visualize
plot(r[[1]])
# Load data into the r session
r <- rast(chirps_files)
r
plot(r)
# Reclassify values for easier plotting
r <- classify(r, c(-Inf, NA))
plot(r)
r
# Load data into the r session
r <- rast(chirps_files)
# Reclassify values for easier plotting
r <- classify(r, rcl = cbind(-Inf, NA))
plot(r)
# Reclassify values for easier plotting
r <- classify(r, rcl = cbind(-Inf, 0, NA))
plot(r)
plot(r, nrow = 2)
plot(r, nr = 2)
# Visualize
plot(r, nr = 2, col = viridis::magma(100))
# Visualize
plot(sqrt(r), nr = 2, col = viridis::magma(100))
# Visualize
plot(r, nr = 2)
# Load required packages
library(terra)
library(rainmapr)
# Download chirps data
chirps_files <- getCHIRPS(
tres      = "monthly"
, sres      = 0.05
, dates     = c("2020-06-01", "2020-12-01")
, dsn       = tempdir()
, overwrite = T
)
# Load data into the r session
r <- rast(chirps_files)
# Reclassify values for easier plotting
r <- classify(r, rcl = cbind(-Inf, 0, NA))
# Visualize
plot(r, nr = 2)
library(riversim)
devtools::install_github("DavidDHofmann/riversim")
# Load required packages
library(riversim)
# Download modis data
river <- rivernetwork(1000)
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
# Visualize it
plot(river, col = "cornflowerblue")
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
axis(1)
axis(2)
# Generate a river network
river <- rivernetwork(100)
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
# Visualize it
class(river)
# Visualize it
terra::plot(terra::vect(river))
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
# Load required packages
library(riversim)
# Generate a river network
river <- rivernetwork(100)
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
axis(1)
axis(2)
# Generate a river network
river <- rivernetwork(1000)
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
axis(1)
axis(2)
# The network can also be returned as a raster
river <- rivernetwork(1000, raster = T)
plot(river, col = c("white", "cornflowerblue"))
plot(river, col = c("white", "cornflowerblue"), border = NA)
plot(river, col = c("white", "cornflowerblue"), frame = NA)
# Visualize it
plot(river, col = "cornflowerblue", border = NA)
# Generate a river network and visualize it
river <- rivernetwork(1000)
plot(river, col = "cornflowerblue")
plot(river, col = "cornflowerblue", border = NA)
axis(1)
axis(2)
# Load required packages
library(video2pic)
devtools::install_github("DavidDHofmann/video2pic")
library(video2pic)
video2pic_install()
# Load required packages
library(video2pic)
# Initalize python environment
video2pic_initialize()
# Path to the example video
video <- system.file("extdata", "Earth.mp4", package = "video2pic")
# Extract one frame per second (and store them to a temporary directory)
video2pic(video, outdir = tempdir(), fps = 1)
# The extracted images can now be found here
imgs <- dir(tempdir(), pattern = ".JPG", full.names = T)
video2pic_install
# Load required packages
library(video2pic)
library(magick)
# Initalize python environment
video2pic_initialize()
# Path to the example video
video <- system.file("extdata", "Earth.mp4", package = "video2pic")
# Extract one frame per second (and store them to a temporary directory)
video2pic(video, outdir = tempdir(), fps = 1)
# The extracted images can now be found here
imgs <- dir(tempdir(), pattern = ".JPG", full.names = T)
# We can visualize some of them if we want
image_read(sample(imgs, 4))
